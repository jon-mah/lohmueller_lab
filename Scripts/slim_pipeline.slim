// Author: Jonathan Mah
// Date: 20190703
// Purpose: Run a simulation which produces two populations, and outputs the
// 	 results into one `.vcf` file.

// Set up simulation.
initialize()
{
  // Set the overall mutation rate
  initializeMutationRate(6.725E-09);

  // m1 mutation type: neutral.
  initializeMutationType('m1', 0.5, 'f', 0.0);

  // m2 mutation type: deleterious.
  initializeMutationType('m2', 0.5, 'g', 0.0980, 4.9260);

  // g1 genomic element type: uses m1 for all mutations
  initializeGenomicElementType('g1', c(m1, m2), c(1, 2.14));

  // Uniform chromosome of length 100 kb.
  initializeGenomicElement(g1, 0, 99999);

  // Full length exome.
  // initializeGenomicElement(g1, 0, 16153085);

  // Uniform recombination along the chromosome.
  initializeRecombinationRate(1e-8);
  setSeed(1);
}

1
{
  sim.addSubpop('p1', 80000);
}

// "Burn in" simulation, i.e., run the simulation 12N generations so that
// population reaches equilibrium
960000
{
  p1.setSubpopulationSize(asInteger(12500));
}

// run for 1786 generations after bottleneck
961786
{
  p1_sample = sample(x=p1.individuals, size=15, replace=F, weights=NULL);
  p1_sample.genomes.outputVCF('../Data/pipeline_output/seed_1_one_pop.vcf');
  sim.simulationFinished();
  print('Simulation has ended.');
}
