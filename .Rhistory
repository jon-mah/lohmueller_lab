ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_color_manual(breaks = c('input', 'model'),
values=c('blue', 'red'))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_line() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_color_manual(values=c('blue', 'red'))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_line(color='blue') +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_color_manual(values=c('blue', 'red'))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_line(color='blue') +
geom_line(aes(x=x_axis, y=model), color='red') +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_color_manual(values=c('blue', 'red'))
synonymous_df
melt(synonymous_df)
melt(synonymous_df, groupby=x_axis)
?melt
melt(synonymous_df, value.name=x_axis)
melt(synonymous_df)
p_syn <- ggplot(data=melt(synonymous_df), aes(x=x_axis, y=variable)) +
geom_line(color='blue') +
geom_line(aes(x=x_axis, y=model), color='red') +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_color_manual(values=c('blue', 'red')) +
p_syn
p_syn <- ggplot(data=melt(synonymous_df), aes(x=x_axis, y=variable)) +
geom_line(color='blue') +
geom_line(aes(x=x_axis, y=model), color='red') +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_color_manual(values=c('blue', 'red'))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_line() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_fill_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_line() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_colour_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=melt(synonymous_df), aes(x=x_axis, y=variable)) +
geom_line() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_colour_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=melt(synonymous_df), aes(y=variable)) +
geom_line() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_colour_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_line() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_colour_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_point()
geom_line() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_colour_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_point() +
geom_line() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_colour_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_point() +
geom_line() +
geom_point()
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_colour_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_point() +
geom_line() +
geom_point() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_colour_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_point() +
geom_line() +
geom_point() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_fill_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_point() +
geom_line() +
geom_point() +
geom_line(aes(x=x_axis, y=model)) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_fill_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("input", "model"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_point(color = 'input') +
geom_line(color = 'input') +
geom_point(aes(x=x_axis, y=model), color = 'model') +
geom_line(aes(x=x_axis, y=model), color = 'model') +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_fill_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("input", "model"),
labels=c("Control", "Treatment 1"))
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input)) +
geom_point(color = 'input') +
geom_line(color = 'input') +
geom_point(aes(x=x_axis, y=model), color = 'model') +
geom_line(aes(x=x_axis, y=model), color = 'model') +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_fill_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("input", "model"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_fill_manual(values=c("#999999", "#E69F00"),
name="Experimental\nCondition",
breaks=c("input", "model"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_fill_manual(values=c("red", "blue"),
name="Experimental\nCondition",
breaks=c("input", "model"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_color_manual(values=c("red", "blue"),
name="Experimental\nCondition",
breaks=c("input", "model"),
labels=c("Control", "Treatment 1"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_color_manual(values=c("red", "blue"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_syn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_syn
p_nonsyn <- ggplot(data=nonsynonymous_df, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Nonsynonymous Site Frequency Spectrum') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_nonsyn
p_syn <- ggplot(data=synonymous_df, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_syn
p_nonsyn <- ggplot(data=nonsynonymous_df, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Nonsynonymous Site Frequency Spectrum') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_nonsyn
# plot_sfs_residual.R
# Author: Jonathan Mah
# Date: 20190731
# This script is used to visually compare the SFS of model and data.
library(ggplot2)
library(reshape2)
setwd("C:/Users/jonat/Desktop/UCLA_BIG_SURP/lohmueller_lab")
input_nonsyn_data = as.numeric(unlist(strsplit(readLines('Eduardo_Scripts/20190715/ns_SFS/AW.sfs')[2], ' ')))
seed_1_nonsyn_data = as.numeric(unlist(strsplit(readLines('Data/AW_array_length_20154/seed_1_easySFS_output_nonsyn/dadi/pop1.sfs')[2], ' ')))
input_syn_data = as.numeric(unlist(strsplit(readLines('Eduardo_Scripts/20190715/syn_SFS/AW.sfs')[2], ' ')))
seed_1_syn_data = as.numeric(unlist(strsplit(readLines('Data/AW_array_length_20154/seed_1_easySFS_output_syn/dadi/pop1.sfs')[2], ' ')))
x_axis = 1:17
nonsynonymous_df = data.frame(input = input_nonsyn_data,
model = seed_1_nonsyn_data,
x_axis = x_axis)
synonymous_df = data.frame(input = input_syn_data,
model = seed_1_syn_data,
x_axis = x_axis)
p_syn_1 <- ggplot(data=synonymous_df, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum, seed=1') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_syn_1
p_nonsyn_1 <- ggplot(data=nonsynonymous_df, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Nonsynonymous Site Frequency Spectrum, seed=1') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_nonsyn_1
# plot_sfs_residual.R
# Author: Jonathan Mah
# Date: 20190731
# This script is used to visually compare the SFS of model and data.
library(ggplot2)
library(reshape2)
setwd("C:/Users/jonat/Desktop/UCLA_BIG_SURP/lohmueller_lab")
input_nonsyn_data = as.numeric(unlist(strsplit(readLines('Eduardo_Scripts/20190715/ns_SFS/AW.sfs')[2], ' ')))
seed_1_nonsyn_data = as.numeric(unlist(strsplit(readLines('Data/AW_array_length_20154/seed_1_easySFS_output_nonsyn/dadi/pop1.sfs')[2], ' ')))
seed_2_nonsyn_data = as.numeric(unlist(strsplit(readLines('Data/AW_array_length_20154_ind_15/seed_1_easySFS_output_nonsyn/dadi/pop1.sfs')[2], ' ')))
input_syn_data = as.numeric(unlist(strsplit(readLines('Eduardo_Scripts/20190715/syn_SFS/AW.sfs')[2], ' ')))
seed_1_syn_data = as.numeric(unlist(strsplit(readLines('Data/AW_array_length_20154/seed_1_easySFS_output_syn/dadi/pop1.sfs')[2], ' ')))
seed_2_syn_data = as.numeric(unlist(strsplit(readLines('Data/AW_array_length_20154_ind_15/seed_1_easySFS_output_syn/dadi/pop1.sfs')[2], ' ')))
x_axis = 1:17
nonsynonymous_df_1 = data.frame(input = input_nonsyn_data,
model = seed_1_nonsyn_data,
x_axis = x_axis)
synonymous_df_1 = data.frame(input = input_syn_data,
model = seed_1_syn_data,
x_axis = x_axis)
p_syn_1 <- ggplot(data=synonymous_df_1, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum, seed=1') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_syn_1
p_nonsyn_1 <- ggplot(data=nonsynonymous_df_1, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Nonsynonymous Site Frequency Spectrum, seed=1') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_nonsyn_1
nonsynonymous_df_2 = data.frame(input = input_nonsyn_data,
model = seed_2_nonsyn_data,
x_axis = x_axis)
synonymous_df_2 = data.frame(input = input_syn_data,
model = seed_2_syn_data,
x_axis = x_axis)
p_syn_2 <- ggplot(data=synonymous_df_2, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum, seed=2') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_syn_2
p_nonsyn_2 <- ggplot(data=nonsynonymous_df_2, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Nonsynonymous Site Frequency Spectrum, seed=2') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_nonsyn_2
nonsynonymous_df_2 = data.frame(input = input_nonsyn_data,
model = seed_2_nonsyn_data,
x_axis = x_axis)
seed_2_nonsyn_data
# plot_sfs_residual.R
# Author: Jonathan Mah
# Date: 20190731
# This script is used to visually compare the SFS of model and data.
library(ggplot2)
library(reshape2)
setwd("C:/Users/jonat/Desktop/UCLA_BIG_SURP/lohmueller_lab")
input_nonsyn_data = as.numeric(unlist(strsplit(readLines('Eduardo_Scripts/20190715/ns_SFS/AW.sfs')[2], ' ')))
seed_1_nonsyn_data = as.numeric(unlist(strsplit(readLines('Data/AW_array_length_20154/seed_1_easySFS_output_nonsyn/dadi/pop1.sfs')[2], ' ')))
seed_2_nonsyn_data = as.numeric(unlist(strsplit(readLines('Data/AW_array_length_20154_ind_15/seed_1_easySFS_output_nonsyn/dadi/pop1.sfs')[2], ' ')))
input_syn_data = as.numeric(unlist(strsplit(readLines('Eduardo_Scripts/20190715/syn_SFS/AW.sfs')[2], ' ')))
seed_1_syn_data = as.numeric(unlist(strsplit(readLines('Data/AW_array_length_20154/seed_1_easySFS_output_syn/dadi/pop1.sfs')[2], ' ')))
seed_2_syn_data = as.numeric(unlist(strsplit(readLines('Data/AW_array_length_20154_ind_15/seed_1_easySFS_output_syn/dadi/pop1.sfs')[2], ' ')))
x_axis = 1:17
nonsynonymous_df_1 = data.frame(input = input_nonsyn_data,
model = seed_1_nonsyn_data,
x_axis = x_axis)
synonymous_df_1 = data.frame(input = input_syn_data,
model = seed_1_syn_data,
x_axis = x_axis)
p_syn_1 <- ggplot(data=synonymous_df_1, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum, seed=1') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_syn_1
p_nonsyn_1 <- ggplot(data=nonsynonymous_df_1, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Nonsynonymous Site Frequency Spectrum, seed=1') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_nonsyn_1
x_axis = x_axis
nonsynonymous_df_2 = data.frame(input = input_nonsyn_data,
model = seed_2_nonsyn_data,
x_axis = x_axis)
synonymous_df_2 = data.frame(input = input_syn_data,
model = seed_2_syn_data,
x_axis = x_axis)
p_syn_2 <- ggplot(data=synonymous_df_2, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Synonymous Site Frequency Spectrum, seed=2') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_syn_2
p_nonsyn_2 <- ggplot(data=nonsynonymous_df_2, aes(x=x_axis, y=input, color='input')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=model, color = 'model')) +
geom_line(aes(x=x_axis, y=model, color = 'model')) +
xlab('Number of sites') +
ylab('Site frequency') +
ggtitle('Residual for Nonsynonymous Site Frequency Spectrum, seed=2') +
scale_color_manual(values=c("blue", "red"),
name="Data Type",
breaks=c("input", "model"),
labels=c("Real data", "Simulated data"))
p_nonsyn_2
